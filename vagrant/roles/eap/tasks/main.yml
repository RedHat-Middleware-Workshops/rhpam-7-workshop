---
# Installs a EAP
# Corresponds to docker layer: https://github.com/sherl0cks/docker-eap

- name: Set EAP Artifact Facts
  set_fact:
    eap_artifact_url: "{{ eap_artifact_repo + '/' + eap_artifact_name }}"
    eap_artifact_dl_dest: "{{ '/tmp/' + eap_artifact_name }}"

- name: Debug EAP Artifact URL
  debug:
    msg: "{{ eap_artifact_url }}"

- name: Debug EAP Download Destination
  debug:
    msg: "{{ eap_artifact_dl_dest }}"

- name: Create JBoss Group
  group:
    name: "{{ jboss_group }}"
    system: yes
    state: present
    gid: "400"

- name: Create JBoss User
  user:
    name: "{{ jboss_user }}"
    comment: "JBoss user"
    uid: "400"
    group: "{{ jboss_group }}"
    home: "{{ eap_dest }}"
    shell: "/bin/bash"

#- name: Download EAP Artifact
#  get_url:
#    url: "{{ eap_artifact_url }}"
#    dest: "{{ eap_artifact_dl_dest }}"
- name: Check that the somefile.conf exists
  stat:
    path: /opt/eap/jboss-modules.jar
  register: stat_result

- name: Copy EAP artifact
  copy:
    src: "{{ eap_artifact_url }}"
    dest: "{{ eap_artifact_dl_dest }}"
  when: stat_result.stat.exists == False

- name: Create JBoss Unzip Directory
  become: true
  become_user: root
  file:
    path: "{{ eap_unarchive_temp_dest }}"
    owner: "{{ jboss_user }}"
    group: "{{ jboss_group }}"
    state: directory
    mode: "755"
  when: stat_result.stat.exists == False

- name: Extract EAP Libraries
  become: true
  become_user: root
  unarchive:
    src: "{{ eap_artifact_dl_dest }}"
    dest: "{{ eap_unarchive_temp_dest }}"
    creates: /tmp/eap/jboss-eap-7.1/jboss-modules.jar
    copy: no
    owner: "{{ jboss_user }}"
    group: "{{ jboss_group }}"
  when: stat_result.stat.exists == False

- name: Move EAP installation
  shell: mv /tmp/eap/jboss-eap-7.1/* /opt/eap
  args:
    creates: /opt/eap/jboss-modules.jar

- include: patch.yml

- include: java_opts.yml

- include: configuration_files.yml

- include: jboss_service.yml
